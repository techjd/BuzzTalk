package com.ssip.buzztalk.utils

object Constants {
    const val DEVELOPMENT_BASE_URL = "http://192.168.102.74:5500/api/"
    const val PRODUCTION_BASE_URL = "" // Enter Deployed Server URL
    const val CHAT_SERVER_URL = "http://192.168.102.74:5500/"
    const val PREFS_TOKEN_FILE = "PREFS_TOKEN_FILE"
    const val USER_TOKEN = "USER_TOKEN"
    const val USER_ID = "USER_ID"
    const val USER_TYPE = "USER_TYPE"
    const val NOTIFICATION_ON_CREATE = "NOTIFICATION_ON_CREATE"
    const val NOTIFICATION_ON_TOKEN = "NOTIFICATION_ON_TOKEN"
    const val IS_USER_FIRST_TIME = "IS_USER_FIRST_TIME"
    const val REGISTER_ENDPOINT = "auth/register"
    const val LOGIN_ENDPOINT = "auth/login"
    const val LOGIN_COMPANY_ENDPOINT = "auth/company/login"
    const val LOGIN_UNIVERSITY_ENDPOINT = "auth/university/login"
    const val GET_USER_INFO_ENDPOINT = "user/userInfo"
    const val GET_USER_INFO_OF_OTHER_USERS_ENDPOINT = "user/getOthersInfo"
    const val GET_SEARCH_USERS = "user/getAllUsers"
    const val FOLLOW_USER = "user/follow"
    const val UNFOLLOW_USER  = "user/unfollow"
    const val GET_ALL_FOLLOWERS_AND_FOLLOWING = "user/getAllFollowersAndFollowing"
    const val CHECK_IF_USER_FOLLOWED_OR_NOT = "user/checkIfUserFollowedOrNot"
    const val SEND_REQUEST = "user/connect"
    const val CHECK_IF_REQUEST_SENT_OR_NOT = "user/checkIfRequestSentOrNot"
    const val GET_ALL_CONNECTIONS_REQUESTS = "user/getAllConnectionsRequest"
    const val ACCEPT_REQUEST = "user/acceptRequest"
    const val GET_ALL_CONNECTIONS = "user/getAllConnections"
    const val GET_ALL_FOLLOWERS = "user/getAllFollowers"
    const val GET_ALL_FOLLOWING = "user/getAllFollowing"
    const val MAKE_ME_ONLINE = "chat/makeMeOnline"
    const val REMOVE_ME_ONLINE = "chat/removeMeOnline"
    const val SEND_MESSAGE = "chat/sendMessage"
    const val GET_ALL_MESSAGES = "chat/getAllMessages"
    const val GET_ALL_CONVERSATIONS = "chat/getAllConversations"
    const val GET_USER_STATUS = "chat/getUserStatus"
    const val POST_CONTENT = "post/addPost"
    const val SEND_NOTI_TOKEN = "user/sendNotiToken"
    const val GET_USERNAMES = "user/getUserNames"
    const val GET_FEED = "post/getFeed"
    const val GET_NEW_FEED = "post/getLatestFeed"
    const val POST_NEW_OPPO_COMPANY = "post/postNewOpportunitites"
    const val POST_NEW_OPPO_UNIVERSITY = "post/postNewOpportunititesUniversity"
    const val GET_MY_FEED = "post/myFeed"
    const val GET_NOTIFICATIONS = "user/getNotifications"
    const val GET_SINGLE_POST = "post/singlePost/{id}"
    const val COMMENT_ON_POST = "post/comment"
    const val GET_ALL_COMMENTS = "post/getComments/{postId}"

    // Organizations API
    const val ORG_REGISTER = "org/register"
    const val ORG_LOGIN = "org/login"
    const val GET_ORG_INFO = "org/getOrgInfo"

    // Organizations
    const val REGISTER_ORG = ""

    // Constants Defined in the backend to cross verify in frontend
    const val SUCCESS = "SUCCESS"
    const val FAILURE = "FAILURE"
    const val USER_FOLLOWED = "USER FOLLOWED"

    const val USER_NOT_CONNECTED = "USER NOT CONNECTED"
    const val REQUEST_SENT = "REQUEST SENT"
    const val UNSEND_REQUEST = "REQUEST UNSEND"
    const val REQUEST_ACCEPTED = "REQUEST ACCEPTED"
    const val REQUEST_REJECTED  = "REQUEST REJECTED"
    const val ALL_CONNECTIONS = "ALL CONNECTIONS"
    const val NEW_MESSAGE = "NEW MESSAGE"
    const val USER_OFFLINE = "USER OFFLINE"
    const val USER_ONLINE = "USER ONLINE"

    // Constants for Types of users in backend
    const val STUDENTS = "STUDENTS"
    const val PROFESSIONAL_USERS = "PROFESSIONAL USERS"
    const val RESEARCH_SCHOLARS = "RESEARCH SCHOLARS"
    const val PROFESSORS = "PROFESSORS"
}